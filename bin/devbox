#!/usr/bin/env ruby

require "fileutils"

DOCKERFILE_NAME = ".Dockerfile.devbox"
DOCKER_COMPOSE_NAME = ".docker-compose.devbox.yml"

def run_devbox(*args)
  abort <<~ERRMSG unless File.exists?(DOCKERFILE_NAME)
    Looks like devbox is not initialized for this project.
    Consider running `devbox init <lang>`...
  ERRMSG

  unwrapped_args = case args.first
  when "up"
    [ "up", "-d", *args.drop(1) ]
  when "down", "ps", "build", "stop"
    args
  when "exec"
    [ "exec", "devbox", *args.drop(1) ]
  else
    [ "exec", "devbox", *args ]
  end

  exec \
    ENV,
    "docker-compose",
    "-f", DOCKER_COMPOSE_NAME,
    *unwrapped_args
end

def init_devbox(lang)
  abort "Need to pass language to init a devbox" unless lang

  path = File.expand_path("../../support", __FILE__)
  dockerfile_path = File.join(path, "Dockerfile.#{lang}.devbox")
  compose_path = File.join(path, "docker-compose.devbox.yml")

  unless File.exists?(dockerfile_path)
    abort "#{lang} is not a supported language"
  end

  FileUtils.cp dockerfile_path, DOCKERFILE_NAME
  FileUtils.cp compose_path, DOCKER_COMPOSE_NAME

  puts "Initialized #{lang} devbox"
end

if ARGV.first == "init"
  init_devbox ARGV[1]
else
  run_devbox *ARGV
end
